name: GitHub Actions AWS connection
run-name: ${{ github.actor }} triggered the Github actions

on:
  pull_request:
    branches:
      - main  # Trigger on PR to the 'main' branch (adjust to your target branch)
  push:
    branches: 
      - main  # Runs on push to main branch only (for Explore-GitHub-Actions)

jobs:
  lint:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'  # Ensure linting only runs for PR events
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python (for linting tools like flake8, black, yamllint)
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'  # Adjust based on your Python version

      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black yamllint  # Install your linting tools

      - name: Run Linting (Python files, YAML files)
        run: |
          ./test/lint.sh  # Run your custom lint script from the test folder

  unit-test:
    runs-on: ubuntu-latest
    needs: lint  # Ensures linting passes before running tests
    if: github.event_name == 'pull_request'  # Ensure unit tests only run for PR events
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python (for unit testing)
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'  # Adjust as needed

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Adjust based on your setup

      - name: Run unit tests
        run: |
          pytest test/  # Run your tests from the 'test' folder

  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Test AWS CLI connectivity
        run: |
          echo "Your ARN is: $(aws sts get-caller-identity --query Arn --output text)"

      - name: Deploy with SAM
        run: |
          sam deploy --config-file samconfig.toml --config-env default --resolve-s3 --no-confirm-changeset --no-fail-on-empty-changeset

      - run: echo "This job's status is ${{ job.status }}."

